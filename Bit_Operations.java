// Для конвертации IP-адреса в число в Java, вы можете использовать следующий код:
public static long ipToLong(String ipAddress) {
    String[] octetStrings = ipAddress.split("\\.");
    long result = 0;
    
    for (int i = 0; i < octetStrings.length; i++) {
        long octetValue = Long.parseLong(octetStrings[i]);
        result += octetValue << (8 * (3 - i));
    }
    
    return result;
}

/*
Этот метод ipToLong() принимает строку ipAddress, представляющую IP-адрес в формате "123.45.55.34", и возвращает соответствующее число типа long.
Внутри метода IP-адрес разбивается на отдельные октеты с помощью метода split(), который разделяет строку по разделителю ".". Затем каждый октет преобразуется в тип long с помощью метода Long.parseLong(). 
В цикле каждый октет перемещается на соответствующую позицию в числе путем побитового сдвига влево (<<). Битовые сдвиги выполняются в зависимости от позиции октета в IP-адресе и их значения.
Например, для IP-адреса "123.45.55.34" каждый октет перемещается на следующую позицию (октет 1 сдвигается на 24 бита влево, октет 2 - на 16 бит, октет 3 - на 8 бит, октет 4 - остается нетронутым).
В результате, IP-адрес будет преобразован в число 2066560802, которое возвращается из метода ipToLong().
Вы можете вызывать этот метод, передавая ему IP-адрес 
*/


// Чтобы преобразовать число обратно в IP-адрес в формате "XXX.XXX.XXX.XXX", вы можете использовать следующий код:
public static String longToIp(long ipAddress) {
    StringBuilder builder = new StringBuilder();
    
    for (int i = 3; i >= 0; i--) {
        long octetValue = (ipAddress >> (8 * i)) & 0xFF;
        builder.append(octetValue);
        
        if (i != 0) {
            builder.append(".");
        }
    }
    
    return builder.toString();
}

/*
Этот метод longToIp() принимает число типа long, представляющее IP-адрес, и возвращает его в форме строки IP-адреса (например, "XXX.XXX.XXX.XXX").
В цикле каждый октет из числа извлекается с помощью побитового сдвига вправо (>>). Затем используется побитовая маска & для получения значений октетов (только последние 8 бит) путем применения маски 0xFF.
Каждый октет добавляется в StringBuilder. Затем метод toString() вызывается на StringBuilder для получения строки IP-адреса.
Вы можете вызывать этот метод, передавая ему число типа long:
*/
